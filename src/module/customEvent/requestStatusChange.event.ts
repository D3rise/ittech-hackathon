import ICustomEvent from "../../interface/module/customEvent/customEvent.interface";
import Bot from "../../bot";
import RequestEntity, { RequestStatus } from "../../entity/request.entity";
import { Markup } from "telegraf";

export default class RequestStatusChangeEvent implements ICustomEvent {
  triggers = "requestStatusChange";

  async exec(
    bot: Bot,
    newStatus: RequestStatus,
    requestId: number
  ): Promise<any> {
    const requestRepo = bot.db.getRepository(RequestEntity);
    const request = await requestRepo.findOne(requestId, {
      relations: ["author", "pendingDocuments"],
    });
    if (!request) return;

    const { author } = request;

    switch (newStatus) {
      case RequestStatus.DOCS_PENDING:
        const pendingDocument = request.pendingDocuments.at(-1);
        if (!pendingDocument) return;

        return bot.telegraf.telegram.sendMessage(
          author.telegramId,
          `–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${request.id} –∏–∑–º–µ–Ω–∏–ª—Å—è!\n` +
            `–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞\n` +
            `–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${pendingDocument.name}\n` +
            `–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${
              pendingDocument.description ?? "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            }\n` +
            `–í—Å–µ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${request.pendingDocuments.length}`,

          Markup.inlineKeyboard([
            Markup.button.callback(
              "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞—è–≤–∫—É",
              `showRequest:${request.id}`
            ),
          ])
        );

      case RequestStatus.REJECTED:
        return bot.telegraf.telegram.sendMessage(
          author.telegramId,
          `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à—É –∑–∞—è–≤–∫—É #${request.id} –æ—Ç–∫–ª–æ–Ω–∏–ª–∏.\n`
        );
      case RequestStatus.ACCEPTED:
        return bot.telegraf.telegram.sendMessage(
          author.telegramId,
          `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º ${request.id} –ø—Ä–∏–Ω—è–ª–∏!`
        );
    }
  }
}
